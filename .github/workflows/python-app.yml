name: Python CI with Database

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.6
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create config.py
      run: |
        echo "username = 'postgres'" > config.py
        echo "password = 'postgres'" >> config.py
        echo "database = 'testdb'" >> config.py
        echo "test_database = 'kesas_test'" >> config.py
        echo "SQLALCHEMY_DATABASE_URI = 'postgresql://postgres:postgres@localhost/testdb'" >> config.py
        echo "SQLALCHEMY_TEST_DATABASE_URI = 'postgresql://postgres:postgres@localhost/testdb'" >> config.py
        echo "SQLALCHEMY_TRACK_MODIFICATIONS = False" >> config.py
        echo "SECRET_KEY = '14141'" >> config.py
        echo "ollama_llm = '/.ollama/models/blobs/sha256-8934d96d3f08982e95922b2b7a2c626a1fe873d7c3b06e8e56d7bc0a1fef9246'" >> config.py

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Create and populate the database
      run: |
        export PGPASSWORD=postgres
        psql -h localhost -U postgres -d testdb -a -f populate_db.sql
        
    - name: Check Database Schema
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d testdb -c "
          SELECT column_name, data_type 
          FROM information_schema.columns 
          WHERE table_name = 'users';
        "

    - name: PyTest tests for Trades
      env:
        PYTHONPATH: ${{ github.workspace }}
        ENABLE_LLM: False  
      run: |
        coverage run -m pytest website/tests/test_trades.py

    - name: Test with unittest auth
      env:
        PYTHONPATH: ${{ github.workspace }}
        ENABLE_LLM: False  
      run: |
        coverage run -m pytest website/tests/test_auth.py

    - name: Test with unittest inventory
      env:
        PYTHONPATH: ${{ github.workspace }}
        ENABLE_LLM: False  
      run: |
        coverage run -m unittest discover -s website/tests -p test_inventory.py
